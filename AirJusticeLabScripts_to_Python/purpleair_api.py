# -*- coding: utf-8 -*-
"""purpleair_api.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1biwNf_1z633tMuh8zL-HsnfnBumC69dW
"""

import requests  # Import the 'requests' library to make HTTP requests

# Define a function named 'get_sensor_history' that takes 'sensor_id' and 'args' as parameters
def get_sensor_history(sensor_id, args):
    query = []  # Create an empty list called 'query' to store key-value pairs

    # Iterate through the keys of the 'args' dictionary
    for key, value in args.items():
        # Encode the key and value to ensure they are safe for a URL
        key = requests.utils.quote(key, safe='~')
        value = requests.utils.quote(value, safe='~')

        # Create a string in the 'key=value' format and add it to the 'query' list
        query.append(f"{key}={value}")

    base = 'https://api.purpleair.com/v1'  # Define the base URL for the PurpleAir API
    url = f"{base}/sensors/{sensor_id}/history?{'&'.join(query)}"  # Construct the full URL

    headers = {
        "X-API-KEY": "YOUR_PURPLEAIR_API_KEY"  # Set the "X-API-KEY" header with your API key
    }

    # Make an HTTP GET request to the constructed URL with the specified headers
    rsp = requests.get(url, headers=headers)

    # Check if the request was successful (status code 200)
    if rsp.status_code == 200:
        data = rsp.json()  # Parse the response data as JSON
        return data  # Return the JSON data
    else:
        # Handle the case when the request is not successful (e.g., error handling)
        print(f"Failed to fetch data. Status code: {rsp.status_code}")
        return None

# Call the function with a sensor ID and a dictionary of arguments
sensor_data = get_sensor_history("YOUR_SENSOR_ID", {"param1": "value1", "param2": "value2"})

# Print the retrieved sensor data or handle it as needed
print(sensor_data)